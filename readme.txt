В данном репо 3 Задания есть меню, в котором можно перемещаться мгновенно на разные эндпоинты:

ссылка на тестовое 1ое ТЗ:
https://faint-adasaurus-4bc.notion.site/web-Python-adf33211e9cc4d6b9ec2c0c619ecab31

надо создать спа приложение (один темплейт и реквест только для создания таблицы).
Модель - таблица с 4 полями, создаем рэндомно при запуске 2 цифровых поля и одно с помощью библиотеки names.
Сделал с приложением django-tables2, реквест только при заплолнении таблицы.
Во вьюхе сразу и сортировка и пагинация. Сортировка еще нажаием на наименование.

ссылка на 2ое и 3е ТЗ:
https://docs.google.com/document/d/1Xw4L-_riLixQFA127Uyvoq3JNrJm6hgSr7c7ux6z_fY/edit#
1ое:
надо забирать вопрос с сайта https://jservice.io/api/random?count=1 и заносить в базу
реализовано на эндпоинте tz2 во вьюхе функция render_api_question
из темплейта можно сразу несколько вопросов добавлять плюс проверка на уникальность
это реализовано на эндпоинте tz2/ можно забирать несколько вопросов сразу.

2ое:
- надо реализовать регистрацию, авторизацию и разлогирование + токен + UUID
- надо принимать аудиофайл пользователя формата wav и конвертировать его в формат mp3
это реализовано на следующих энпоинтах: register2/ реистрация logout/ логирование login/ разлогирование audio/
конвертация аудио. То есть 5 рабочих эндпоинтов, остальное я позже "приберу".

python3 manage.py cube_rotate крутим мышкой куб.


############Email to send this task
# hr@bewise.ai
#######################################
1. Клонируем репо
2. docker compose up
3. Когда запускаем проект из-под докера в сеттингзах указываем DB_HOST=db, а порт вообще не указываем, убираем его.
папку /pgdata удаляем, если она появилась вручную sudo rm -rf pgdata/ (попробовали запустить, не получилось, а папка от
 вольюмс в корневом уже появилась, вот ее надо удалить, ну или дать ей разрешения максимальные) + возможно остановить
 придется постгрес systemctl stop postgresql (я останвливаю, чтобы не мешала)
#######################################

При регистрации пользуемся эндпоинтом register2/ на нем загружаем аудиофайл формата wav, автоматически добавляется токен
 в поле модели и UUID. Если потом заходите на эндпоинт audio/ автоматически в базу занесется конвертированный аудиофайл
 формата mp3
 ######################################
 Что можно допилить:
1. Токен при регистрации неплохо, но лучше еще и при логировании каждый раз обновлять.
2. Вывести на новый енпоинт юзеров и значения таблицы (две таблицы на одном темплейте)
3. Убрать все лишнее (рест и пр.)
4. Разобраться и подключить библиотеку django-audiofield, там конвертация аудиофайла красиво должна проходить
5. Сам процесс конвертирования можно привязать к какой-нибудь кнопке на темплейте, а не автоматически или не только
автоматически при переходе на ендпоинт, так попрезентабельнее должно быть.
6. Протестировать задание "вопросы" на уникальность добавляемого не пришлось, надо пецкать долго, наверное.

P.S. c def generate_values(): вроде разобрался, она в 2 местах была, убрал, теперь проверить осталось как изпод
контейнера запустится в новом виде. пока не клонирую (у меня сетингзы заточены не под докер).